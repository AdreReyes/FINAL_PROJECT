name: Deploy Cluster

on: 
  workflow_dispatch: 
    branches: 
      - main

env: 
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
  TABLE_NAME: ${{ secrets.TABLE_NAME }}
  DOCKERHUB_USR: ${{ secrets.DOCKERHUB_USR }}
  DOCKERHUB_PWD: ${{ secrets.DOCKERHUB_PWD }}
  AWS_ECS_ARN: ${{ secrets.AWS_ECS_ARN }}
  MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
  MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}

jobs: 
  deploy-cluster: 
    name: Deploy Cluster using Terraform
    runs-on: ubuntu-latest
    environment: Staging
    defaults:
      run:
        shell: bash
        working-directory: ./Terraform/Cluster_Staging
    steps: 
    - uses: actions/checkout@v3
      name: GitHub Checkout
    - name: Install Docker
      run: sudo ./installdocker.sh
      working-directory: ./Scripts
    - name: Install Terraform
      run: sudo ./installterraform.sh
      working-directory: ./Scripts
    - name: Install jq
      run: sudo apt update && sudo apt install jq -y
    - name: Set AWS_Region
      run: echo "AWS_REGION=$(jq .region -r .config.json)" >> $GITHUB_ENV
      working-directory: .
    - name: DockerHub Login
      run: docker login --username $DOCKERHUB_USR --password $DOCKERHUB_PWD
    - name: Create Frontend Image
      run: docker build -t $DOCKERHUB_USR/grade_tracker_frontend:latest .
      working-directory: ./Docker/frontend
    - name: Replace User Placeholder MYSQL_ROOT_PASSWORD
      run: python3 ../../Utilities/replacer.py ../../Docker/backend/userapp/app/app.py ../../Docker/backend/userapp/app/app.py ~mysqlrootpassword~ $MYSQL_ROOT_PASSWORD
    - name: Replace User Placeholder MYSQL_DATABASE
      run: python3 ../../Utilities/replacer.py ../../Docker/backend/userapp/app/app.py ../../Docker/backend/userapp/app/app.py ~mysqldatabase~ $MYSQL_DATABASE
    - name: Create Backend Microservice User Image
      run: docker build -t $DOCKERHUB_USR/grade_tracker_backend_microservice_user:latest .
      working-directory: ./Docker/backend/userapp
    - name: Replace Assignment Placeholder MYSQL_ROOT_PASSWORD
      run: python3 ../../Utilities/replacer.py ../../Docker/backend/assignmentapp/app/app.py ../../Docker/backend/assignmentapp/app/app.py ~mysqlrootpassword~ $MYSQL_ROOT_PASSWORD
    - name: Replace Assignment Placeholder MYSQL_DATABASE
      run: python3 ../../Utilities/replacer.py ../../Docker/backend/assignmentapp/app/app.py ../../Docker/backend/assignmentapp/app/app.py ~mysqldatabase~ $MYSQL_DATABASE
    - name: Create Backend Microservice Assignment Image
      run: docker build -t $DOCKERHUB_USR/grade_tracker_backend_microservice_assignment:latest .
      working-directory: ./Docker/backend/assignmentapp
    - name: Create MYSQL Image
      run: docker build -t $DOCKERHUB_USR/grade_tracker_mysql:latest .
      working-directory: ./Docker/mysql
    - name: Create Adminer Image
      run: docker build -t $DOCKERHUB_USR/grade_tracker_adminer:latest .
      working-directory: ./Docker/adminer
    - name: Create Nginx Image
      run: docker build -t $DOCKERHUB_USR/grade_tracker_nginx:latest .
      working-directory: ./Docker/nginx
    - name: Push Frontend Image
      run: docker push $DOCKERHUB_USR/grade_tracker_frontend:latest
    - name: Push Backend Microservice User Image
      run: docker push $DOCKERHUB_USR/grade_tracker_backend_microservice_user:latest
    - name: Push Backend Microservice Assignment Image
      run: docker push $DOCKERHUB_USR/grade_tracker_backend_microservice_assignment:latest
    - name: Push MYSQL Image
      run: docker push $DOCKERHUB_USR/grade_tracker_mysql:latest
    - name: Push Adminer Image
      run: docker push $DOCKERHUB_USR/grade_tracker_adminer:latest
    - name: Push Nginx Image
      run: docker push $DOCKERHUB_USR/grade_tracker_nginx:latest
    - name: Replace Backend Placeholder BUCKET_NAME
      run: python3 ../../Utilities/replacer.py backend.tf backend.tf ~bucketname~ $BUCKET_NAME
    - name: Replace Backend Placeholder TABLE_NAME
      run: python3 ../../Utilities/replacer.py backend.tf backend.tf ~tablename~ $TABLE_NAME
    - name: Replace Backend Placeholder AWS_REGION
      run: python3 ../../Utilities/replacer.py backend.tf backend.tf ~region~ $AWS_REGION
    - name: Replace Placeholder AWS_REGION
      run: python3 ../../Utilities/replacer.py terraform.tfvars terraform.tfvars ~region~ $AWS_REGION
    - name: Replace Placeholder AWS_ECS_ARN
      run: python3 ../../Utilities/replacer.py main.tf main.tf ~awsecsarn~ $AWS_ECS_ARN
    - name: Replace Placeholder MYSQL_ROOT_PASSWORD
      run: python3 ../../Utilities/replacer.py main.tf main.tf ~mysqlrootpassword~ $MYSQL_ROOT_PASSWORD
    - name: Replace Placeholder MYSQL_DATABASE
      run: python3 ../../Utilities/replacer.py main.tf main.tf ~mysqldatabase~ $MYSQL_DATABASE
    - name: Terraform Init
      run: terraform init
    - name: Terraform Validate
      run: terraform validate
    - name: Terraform Apply
      run: terraform apply --auto-approve
    - name: App Link
      if: always()
      run: printf "\033[0;32mApp Link ~>\033[0m $(terraform output -raw alb_url )/\n"